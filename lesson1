<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>ДЗ1</title>
    <script>
        // ------------ 1.-------------------
        function loop(times = 0, callback = null) {
            if (callback) {
                for (let i = 0; i < times; i++) {
                    callback();
                }
            }
        }

        loop(10, () => {
            console.log('callback called');
        })
        ;


        // ------------ 2.-------------------
        function calculateArea() {
            let argNum = arguments.length;
            if (argNum > 0) {
                const args = Array.from(arguments);
                let [a, b, c] = args;
                switch (argNum) {
                    case 1:
                        return {area: a * a, figure: 'Квадрат', input: args};
                        break;

                    case 2:
                        return {area: a * b, figure: 'Прямоугольник', input: args};
                        break;

                    case 3:
                        let s = (a * b * c) / 2;
                        let triangleArea = Math.sqrt(s * (s - a) * (s - b) * (s - c));
                        return {area: triangleArea, figure: 'Треугольник', input: args};
                        break;

                    default:
                        return {area: 0, figure: 'Не задано', input: args};
                        break;
                }
            }
        }
        console.log(calculateArea(3));
        console.log(calculateArea(5, 2));
        console.log(calculateArea(6, 1, 4));
        console.log(calculateArea(5, 2, 8, 4));


        // ------------ 3.-------------------
        class Human {
            constructor(name, age, dateOfBirth) {
                this.name = name;
                this.age = age;
                this.dateOfBirth = dateOfBirth;
            };

            displayInfo() {
                return('name:' + this.name + ', age:' + this.age + ', dateOfBirth:' + this.dateOfBirth);
            };

            isEqual(human) {
                let{name, age, dateOfBirth} = human;
                if(name === this.name && age === this.age && dateOfBirth === this.dateOfBirth) {
                    return true;
                } else {
                    return false;
                }
            }
        }

        class Employee extends Human {
            constructor(name, age, dateOfBirth, salary, department) {
                super(name, age, dateOfBirth);
                this.salary = salary;
                this.department = department;
            }

            displayInfo() {
                return(super.displayInfo() + ', salary:' + this.salary + ', department:' + this.department);
            }
        }

        class Developer extends Employee {
            constructor(name, age, dateOfBirth, salary, department, manager) {
                super(name, age, dateOfBirth, salary, department);
                this.manager = manager;
            }

            displayInfo() {
                return(super.displayInfo() + ', manager:' + this.manager.name);
            }

            changeManager(newManager) {
                this.manager = newManager;
            }
        }

        class Manager extends Employee {

            constructor(name, age, dateOfBirth, salary, department) {
                super(name, age, dateOfBirth, salary, department);
                this.employees = [];
            }

            displayInfo() {
                let employeeStr = '';
                for(let i = 0; i < this.employees.length; i++) {
                    if(employeeStr !== '') {
                        employeeStr+=', ';
                    }
                    employeeStr+=this.employees[i].name;
                }
                return(super.displayInfo() + ', employees:' + employeeStr);
            }

            addEmployee(empl) {
                if (empl) {
                    this.employees.push(empl)
                }
            }
            removeEmployee(empl) {
                for(let i = 0; i < this.employees.length; i++) {
                    if (empl.isEqual(this.employees[i])) {
                        this.employees.splice(i, 1);
                        break;
                    }
                }
            }
        }

        let human1 = new Human('Milan', 37, '01-09-1981');
        console.log('Human1: ' + human1.displayInfo());

        let employee1 = new Employee('Александр', 23, '15-06-1995', 80000, 'IT');
        console.log('Employee1:' + employee1.displayInfo());

        let manager1 = new Manager('Артем', 43, '11-07-1975', 180000, 'IT');
        console.log('Manager1:' + manager1.displayInfo());

        let developer1 = new Developer('Иван', 34, '05-12-1984', 140000, 'IT', manager1);
        console.log('Developer1:' + developer1.displayInfo());

        manager1.addEmployee(developer1);
        console.log('Manager1:' + manager1.displayInfo());

        let developer2 = new Developer('Егор', 30, '14-02-1988', 120000, 'IT', manager1);
        console.log('Developer2:' + developer2.displayInfo());

        manager1.addEmployee(developer2);
        console.log('Manager1:' + manager1.displayInfo());

        manager1.removeEmployee(developer2);
        console.log('Manager1:' + manager1.displayInfo());

        manager1.removeEmployee(developer1);
        console.log('Manager1:' + manager1.displayInfo());


        // ------------ 4.-------------------
        function* anketa() {
            let name = prompt('Please enter your name', 'Name');
            yield name;
            let age = prompt('Please enter your age', 'Age');
            yield age;
            let city = prompt('Please enter your city', 'City');
            return city;
        }

        let myAnketa = anketa();
        let inputArr = [];
        for(let i = 0; i < 3; i++) {
            inputArr.push(myAnketa.next().value);
        }
        let [name, age, city] = inputArr;
        console.log({name: name, age: age, city: city});


        // ------------ 5.-------------------
        let promiseArr = [];
        var url = 'https://jsonplaceholder.typicode.com/users/';

        for(i = 1; i < 11; i++) {
            promiseArr.push(fetch(url + i).then(response => response.json()));
        }
        Promise.all(promiseArr).then(r => console.log(r));
    </script>
</head>
<body>

</body>
</html>
